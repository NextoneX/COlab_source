# Part 1 Test
# Including SLLI, SRLI, SRAI, ADD, SUB, SLL, SLT, SLTU, XOR, SRL, SRA, OR, AND, ADDI, SLTI, SLTIU, XORI, ORI, ANDI, LUI, AUIPC


.section .text; .align 6; .globl _start; _start: addi zero,zero, 0
#add.S
  # positive
  test_2: 
    li x1, 0; 
    li x2, 1; 
    add x30, x1, x2;; 
    li x29, 1; 
    li gp, 2; bne x30, x29, fail;;
  test_3: 
    li x1, 1; 
    li x2, 2; 
    add x30, x1, x2;; 
    li x29, 3; 
    li gp, 3; bne x30, x29, fail;;
  # negative
  test_4: 
    li x1, -1; 
    li x2, -2; 
    add x30, x1, x2;; 
    li x29, -3; 
    li gp, 4; bne x30, x29, fail;;
  
#addi.S
  # positive
  test_5: 
    li x1, 0; 
    addi x30, x1, 0;; 
    li x29, 0; 
    li gp, 5; bne x30, x29, fail;;
  test_6: 
    li x1, 1; 
    addi x30, x1, 2;; 
    li x29, 3; 
    li gp, 6; bne x30, x29, fail;;
  # negative
  test_7: 
    li x1, -1; 
    addi x30, x1, -2;; 
    li x29, -3; 
    li gp, 7; bne x30, x29, fail;;
  
#and.S

  test_8: 
    li x1, 0xff00ff00; 
    li x2, 0x0f0f0f0f; 
    and x30, x1, x2;; 
    li x29, 0x0f000f00; 
    li gp, 8; bne x30, x29, fail;;
  
#andi.S
  #-------------------------------------------------------------
  # Logical tests
  #-------------------------------------------------------------

  test_9: 
    li x1, ((0xff00ff00) & ((1 << (32 - 1) << 1) - 1)); 
    andi x30, x1, ((0xf0f) | (-(((0xf0f) >> 11) & 1) << 11));; 
    li x29, ((0xff00ff00) & ((1 << (32 - 1) << 1) - 1)); 
    li gp, 9; bne x30, x29, fail;;
  test_90: li x1, ((0x0ff00ff0) & ((1 << (32 - 1) << 1) - 1)); andi x30, x1, ((0x0f0) | (-(((0x0f0) >> 11) & 1) << 11));; li x29, ((0x000000f0) & ((1 << (32 - 1) << 1) - 1)); li gp, 90; bne x30, x29, fail;;
  test_91: li x1, ((0x00ff00ff) & ((1 << (32 - 1) << 1) - 1)); andi x30, x1, ((0x70f) | (-(((0x70f) >> 11) & 1) << 11));; li x29, ((0x0000000f) & ((1 << (32 - 1) << 1) - 1)); li gp, 91; bne x30, x29, fail;;
  test_92: li x1, ((0xf00ff00f) & ((1 << (32 - 1) << 1) - 1)); andi x30, x1, ((0x0f0) | (-(((0x0f0) >> 11) & 1) << 11));; li x29, ((0x00000000) & ((1 << (32 - 1) << 1) - 1)); li gp, 92; bne x30, x29, fail;;

#auipc.S
  test_102: .align 3; lla a0, 1f + 10000; jal a1, 1f; 1: sub a0, a0, a1;; li x29, ((10000) & ((1 << (32 - 1) << 1) - 1)); li gp, 102; bne a0, x29, fail;
  test_103: .align 3; lla a0, 1f - 10000; jal a1, 1f; 1: sub a0, a0, a1;; li x29, ((-10000) & ((1 << (32 - 1) << 1) - 1)); li gp, 103; bne a0, x29, fail;

#lui.S
  #-------------------------------------------------------------
  # Basic tests
  #-------------------------------------------------------------

  test_309: lui x1, 0x00000; li x29, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li gp, 309; bne x1, x29, fail;;
  test_310: lui x1, 0xfffff;sra x1,x1,1; li x29, ((0xfffffffffffff800) & ((1 << (32 - 1) << 1) - 1)); li gp, 310; bne x1, x29, fail;;
  test_311: lui x1, 0x7ffff;sra x1,x1,20; li x29, ((0x00000000000007ff) & ((1 << (32 - 1) << 1) - 1)); li gp, 311; bne x1, x29, fail;;
  test_312: lui x1, 0x80000;sra x1,x1,20; li x29, ((0xfffffffffffff800) & ((1 << (32 - 1) << 1) - 1)); li gp, 312; bne x1, x29, fail;;

  test_313: lui x0, 0x80000; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 313; bne x0, x29, fail;;

#or.S
  #-------------------------------------------------------------
  # Logical tests
  #-------------------------------------------------------------

  test_332: li x1, ((0xff00ff00) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0f0f0f0f) & ((1 << (32 - 1) << 1) - 1)); or x30, x1, x2;; li x29, ((0xff0fff0f) & ((1 << (32 - 1) << 1) - 1)); li gp, 332; bne x30, x29, fail;;
  test_333: li x1, ((0x0ff00ff0) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xf0f0f0f0) & ((1 << (32 - 1) << 1) - 1)); or x30, x1, x2;; li x29, ((0xfff0fff0) & ((1 << (32 - 1) << 1) - 1)); li gp, 333; bne x30, x29, fail;;
  test_334: li x1, ((0x00ff00ff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0f0f0f0f) & ((1 << (32 - 1) << 1) - 1)); or x30, x1, x2;; li x29, ((0x0fff0fff) & ((1 << (32 - 1) << 1) - 1)); li gp, 334; bne x30, x29, fail;;
  test_335: li x1, ((0xf00ff00f) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xf0f0f0f0) & ((1 << (32 - 1) << 1) - 1)); or x30, x1, x2;; li x29, ((0xf0fff0ff) & ((1 << (32 - 1) << 1) - 1)); li gp, 335; bne x30, x29, fail;;

#ori.S
  #-------------------------------------------------------------
  # Logical tests
  #-------------------------------------------------------------

  test_358: li x1, ((0xffffffffff00ff00) & ((1 << (32 - 1) << 1) - 1)); ori x30, x1, ((0xf0f) | (-(((0xf0f) >> 11) & 1) << 11));; li x29, ((0xffffffffffffff0f) & ((1 << (32 - 1) << 1) - 1)); li gp, 358; bne x30, x29, fail;;
  test_359: li x1, ((0x000000000ff00ff0) & ((1 << (32 - 1) << 1) - 1)); ori x30, x1, ((0x0f0) | (-(((0x0f0) >> 11) & 1) << 11));; li x29, ((0x000000000ff00ff0) & ((1 << (32 - 1) << 1) - 1)); li gp, 359; bne x30, x29, fail;;
  test_360: li x1, ((0x0000000000ff00ff) & ((1 << (32 - 1) << 1) - 1)); ori x30, x1, ((0x70f) | (-(((0x70f) >> 11) & 1) << 11));; li x29, ((0x0000000000ff07ff) & ((1 << (32 - 1) << 1) - 1)); li gp, 360; bne x30, x29, fail;;
  test_361: li x1, ((0xfffffffff00ff00f) & ((1 << (32 - 1) << 1) - 1)); ori x30, x1, ((0x0f0) | (-(((0x0f0) >> 11) & 1) << 11));; li x29, ((0xfffffffff00ff0ff) & ((1 << (32 - 1) << 1) - 1)); li gp, 361; bne x30, x29, fail;;

#sll.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_415: li x1, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); sll x30, x1, x2;; li x29, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); li gp, 415; bne x30, x29, fail;;
  test_416: li x1, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); sll x30, x1, x2;; li x29, ((0x0000000000000002) & ((1 << (32 - 1) << 1) - 1)); li gp, 416; bne x30, x29, fail;;
  
  test_420: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); sll x30, x1, x2;; li x29, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); li gp, 420; bne x30, x29, fail;;
  test_421: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); sll x30, x1, x2;; li x29, ((0xfffffffffffffffe) & ((1 << (32 - 1) << 1) - 1)); li gp, 421; bne x30, x29, fail;;
  
  test_425: li x1, ((0x0000000021212121) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); sll x30, x1, x2;; li x29, ((0x0000000021212121) & ((1 << (32 - 1) << 1) - 1)); li gp, 425; bne x30, x29, fail;;
  test_426: li x1, ((0x0000000021212121) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); sll x30, x1, x2;; li x29, ((0x0000000042424242) & ((1 << (32 - 1) << 1) - 1)); li gp, 426; bne x30, x29, fail;;
  
#slli.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_460: li x1, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); slli x30, x1, ((0) | (-(((0) >> 11) & 1) << 11));; li x29, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); li gp, 460; bne x30, x29, fail;;
  test_461: li x1, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); slli x30, x1, ((1) | (-(((1) >> 11) & 1) << 11));; li x29, ((0x0000000000000002) & ((1 << (32 - 1) << 1) - 1)); li gp, 461; bne x30, x29, fail;;
  
  test_465: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); slli x30, x1, ((0) | (-(((0) >> 11) & 1) << 11));; li x29, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); li gp, 465; bne x30, x29, fail;;
  test_466: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); slli x30, x1, ((1) | (-(((1) >> 11) & 1) << 11));; li x29, ((0xfffffffffffffffe) & ((1 << (32 - 1) << 1) - 1)); li gp, 466; bne x30, x29, fail;;
  
  test_470: li x1, ((0x0000000021212121) & ((1 << (32 - 1) << 1) - 1)); slli x30, x1, ((0) | (-(((0) >> 11) & 1) << 11));; li x29, ((0x0000000021212121) & ((1 << (32 - 1) << 1) - 1)); li gp, 470; bne x30, x29, fail;;
  test_471: li x1, ((0x0000000021212121) & ((1 << (32 - 1) << 1) - 1)); slli x30, x1, ((1) | (-(((1) >> 11) & 1) << 11));; li x29, ((0x0000000042424242) & ((1 << (32 - 1) << 1) - 1)); li gp, 471; bne x30, x29, fail;;
  
#slt.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_487: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); slt x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 487; bne x30, x29, fail;;
  test_488: li x1, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); slt x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 488; bne x30, x29, fail;;
  
  test_491: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xffffffffffff8000) & ((1 << (32 - 1) << 1) - 1)); slt x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 491; bne x30, x29, fail;;
  test_492: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); slt x30, x1, x2;; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 492; bne x30, x29, fail;;
  
  test_494: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000007fff) & ((1 << (32 - 1) << 1) - 1)); slt x30, x1, x2;; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 494; bne x30, x29, fail;;
  test_495: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); slt x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 495; bne x30, x29, fail;;
  
  test_497: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000007fff) & ((1 << (32 - 1) << 1) - 1)); slt x30, x1, x2;; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 497; bne x30, x29, fail;;
  test_498: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xffffffffffff8000) & ((1 << (32 - 1) << 1) - 1)); slt x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 498; bne x30, x29, fail;;

  test_499: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); slt x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 499; bne x30, x29, fail;;
  test_500: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); slt x30, x1, x2;; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 500; bne x30, x29, fail;;

#slti.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_524: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); slti x30, x1, ((0x000) | (-(((0x000) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 524; bne x30, x29, fail;;
  test_525: li x1, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); slti x30, x1, ((0x001) | (-(((0x001) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 525; bne x30, x29, fail;;
  
  test_528: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); slti x30, x1, ((0x800) | (-(((0x800) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 528; bne x30, x29, fail;;
  test_529: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); slti x30, x1, ((0x000) | (-(((0x000) >> 11) & 1) << 11));; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 529; bne x30, x29, fail;;
  
  test_531: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); slti x30, x1, ((0x7ff) | (-(((0x7ff) >> 11) & 1) << 11));; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 531; bne x30, x29, fail;;
  test_532: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); slti x30, x1, ((0x000) | (-(((0x000) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 532; bne x30, x29, fail;;
  
  test_534: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); slti x30, x1, ((0x7ff) | (-(((0x7ff) >> 11) & 1) << 11));; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 534; bne x30, x29, fail;;
  test_535: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); slti x30, x1, ((0x800) | (-(((0x800) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 535; bne x30, x29, fail;;

  test_536: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); slti x30, x1, ((0xfff) | (-(((0xfff) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 536; bne x30, x29, fail;;
  test_537: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); slti x30, x1, ((0x001) | (-(((0x001) >> 11) & 1) << 11));; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 537; bne x30, x29, fail;;
  
#sltiu.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_548: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); sltiu x30, x1, ((0x000) | (-(((0x000) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 548; bne x30, x29, fail;;
  test_549: li x1, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); sltiu x30, x1, ((0x001) | (-(((0x001) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 549; bne x30, x29, fail;;
  
  test_552: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); sltiu x30, x1, ((0x800) | (-(((0x800) >> 11) & 1) << 11));; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 552; bne x30, x29, fail;;
  test_553: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); sltiu x30, x1, ((0x000) | (-(((0x000) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 553; bne x30, x29, fail;;
  
  test_555: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); sltiu x30, x1, ((0x7ff) | (-(((0x7ff) >> 11) & 1) << 11));; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 555; bne x30, x29, fail;;
  test_556: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); sltiu x30, x1, ((0x000) | (-(((0x000) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 556; bne x30, x29, fail;;
  
  test_558: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); sltiu x30, x1, ((0x7ff) | (-(((0x7ff) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 558; bne x30, x29, fail;;
  test_559: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); sltiu x30, x1, ((0x800) | (-(((0x800) >> 11) & 1) << 11));; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 559; bne x30, x29, fail;;

  test_560: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); sltiu x30, x1, ((0xfff) | (-(((0xfff) >> 11) & 1) << 11));; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 560; bne x30, x29, fail;;
  test_561: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); sltiu x30, x1, ((0x001) | (-(((0x001) >> 11) & 1) << 11));; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 561; bne x30, x29, fail;;
  
#sltu.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_573: li x1, ((0x00000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x00000000) & ((1 << (32 - 1) << 1) - 1)); sltu x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 573; bne x30, x29, fail;;
  test_574: li x1, ((0x00000001) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x00000001) & ((1 << (32 - 1) << 1) - 1)); sltu x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 574; bne x30, x29, fail;;
  
  test_577: li x1, ((0x00000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xffff8000) & ((1 << (32 - 1) << 1) - 1)); sltu x30, x1, x2;; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 577; bne x30, x29, fail;;
  test_578: li x1, ((0x80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x00000000) & ((1 << (32 - 1) << 1) - 1)); sltu x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 578; bne x30, x29, fail;;
  
  test_580: li x1, ((0x00000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x00007fff) & ((1 << (32 - 1) << 1) - 1)); sltu x30, x1, x2;; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 580; bne x30, x29, fail;;
  test_581: li x1, ((0x7fffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x00000000) & ((1 << (32 - 1) << 1) - 1)); sltu x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 581; bne x30, x29, fail;;
  
  test_583: li x1, ((0x80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x00007fff) & ((1 << (32 - 1) << 1) - 1)); sltu x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 583; bne x30, x29, fail;;
  test_584: li x1, ((0x7fffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xffff8000) & ((1 << (32 - 1) << 1) - 1)); sltu x30, x1, x2;; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 584; bne x30, x29, fail;;

  test_585: li x1, ((0x00000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xffffffff) & ((1 << (32 - 1) << 1) - 1)); sltu x30, x1, x2;; li x29, ((1) & ((1 << (32 - 1) << 1) - 1)); li gp, 585; bne x30, x29, fail;;
  test_586: li x1, ((0xffffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x00000001) & ((1 << (32 - 1) << 1) - 1)); sltu x30, x1, x2;; li x29, ((0) & ((1 << (32 - 1) << 1) - 1)); li gp, 586; bne x30, x29, fail;;
  
#sra.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_611: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); sra x30, x1, x2;; li x29, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li gp, 611; bne x30, x29, fail;;
  test_612: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); sra x30, x1, x2;; li x29, ((0xffffffffc0000000) & ((1 << (32 - 1) << 1) - 1)); li gp, 612; bne x30, x29, fail;;
  
  test_616: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); sra x30, x1, x2;; li x29, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); li gp, 616; bne x30, x29, fail;;
  test_617: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); sra x30, x1, x2;; li x29, ((0x000000003fffffff) & ((1 << (32 - 1) << 1) - 1)); li gp, 617; bne x30, x29, fail;;
  
  test_621: li x1, ((0xffffffff81818181) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); sra x30, x1, x2;; li x29, ((0xffffffff81818181) & ((1 << (32 - 1) << 1) - 1)); li gp, 621; bne x30, x29, fail;;
  test_622: li x1, ((0xffffffff81818181) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); sra x30, x1, x2;; li x29, ((0xffffffffc0c0c0c0) & ((1 << (32 - 1) << 1) - 1)); li gp, 622; bne x30, x29, fail;;
  
#srai.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_653: li x1, ((0xffffff8000000000) & ((1 << (32 - 1) << 1) - 1)); srai x30, x1, ((0) | (-(((0) >> 11) & 1) << 11));; li x29, ((0xffffff8000000000) & ((1 << (32 - 1) << 1) - 1)); li gp, 653; bne x30, x29, fail;;
  test_654: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); srai x30, x1, ((1) | (-(((1) >> 11) & 1) << 11));; li x29, ((0xffffffffc0000000) & ((1 << (32 - 1) << 1) - 1)); li gp, 654; bne x30, x29, fail;;
  
  test_658: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); srai x30, x1, ((1) | (-(((1) >> 11) & 1) << 11));; li x29, ((0x000000003fffffff) & ((1 << (32 - 1) << 1) - 1)); li gp, 658; bne x30, x29, fail;;
  test_659: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); srai x30, x1, ((7) | (-(((7) >> 11) & 1) << 11));; li x29, ((0x0000000000ffffff) & ((1 << (32 - 1) << 1) - 1)); li gp, 659; bne x30, x29, fail;;
  
  test_662: li x1, ((0xffffffff81818181) & ((1 << (32 - 1) << 1) - 1)); srai x30, x1, ((0) | (-(((0) >> 11) & 1) << 11));; li x29, ((0xffffffff81818181) & ((1 << (32 - 1) << 1) - 1)); li gp, 662; bne x30, x29, fail;;
  test_663: li x1, ((0xffffffff81818181) & ((1 << (32 - 1) << 1) - 1)); srai x30, x1, ((1) | (-(((1) >> 11) & 1) << 11));; li x29, ((0xffffffffc0c0c0c0) & ((1 << (32 - 1) << 1) - 1)); li gp, 663; bne x30, x29, fail;;
  
#srl.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_676: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0xffffffff80000000) & ((1 << (32 -1) << 1) - 1)) >> (0)) & ((1 << (32 - 1) << 1) - 1)); li gp, 676; bne x30, x29, fail;;
  test_677: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0xffffffff80000000) & ((1 << (32 -1) << 1) - 1)) >> (1)) & ((1 << (32 - 1) << 1) - 1)); li gp, 677; bne x30, x29, fail;;
  
  test_681: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0xffffffffffffffff) & ((1 << (32 -1) << 1) - 1)) >> (0)) & ((1 << (32 - 1) << 1) - 1)); li gp, 681; bne x30, x29, fail;;
  test_682: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0xffffffffffffffff) & ((1 << (32 -1) << 1) - 1)) >> (1)) & ((1 << (32 - 1) << 1) - 1)); li gp, 682; bne x30, x29, fail;;
  
  test_686: li x1, ((0x0000000021212121) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0x0000000021212121) & ((1 << (32 -1) << 1) - 1)) >> (0)) & ((1 << (32 - 1) << 1) - 1)); li gp, 686; bne x30, x29, fail;;
  test_687: li x1, ((0x0000000021212121) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0x0000000021212121) & ((1 << (32 -1) << 1) - 1)) >> (1)) & ((1 << (32 - 1) << 1) - 1)); li gp, 687; bne x30, x29, fail;;
  
#srli.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_718: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0xffffffff80000000) & ((1 << (32 -1) << 1) - 1)) >> (0)) & ((1 << (32 - 1) << 1) - 1)); li gp, 718; bne x30, x29, fail;;
  test_719: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0xffffffff80000000) & ((1 << (32 -1) << 1) - 1)) >> (1)) & ((1 << (32 - 1) << 1) - 1)); li gp, 719; bne x30, x29, fail;;
  
  test_723: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0xffffffffffffffff) & ((1 << (32 -1) << 1) - 1)) >> (0)) & ((1 << (32 - 1) << 1) - 1)); li gp, 723; bne x30, x29, fail;;
  test_724: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0xffffffffffffffff) & ((1 << (32 -1) << 1) - 1)) >> (1)) & ((1 << (32 - 1) << 1) - 1)); li gp, 724; bne x30, x29, fail;;
  
  test_728: li x1, ((0x0000000021212121) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0x0000000021212121) & ((1 << (32 -1) << 1) - 1)) >> (0)) & ((1 << (32 - 1) << 1) - 1)); li gp, 728; bne x30, x29, fail;;
  test_729: li x1, ((0x0000000021212121) & ((1 << (32 - 1) << 1) - 1)); li x2, ((1) & ((1 << (32 - 1) << 1) - 1)); srl x30, x1, x2;; li x29, ((((0x0000000021212121) & ((1 << (32 -1) << 1) - 1)) >> (1)) & ((1 << (32 - 1) << 1) - 1)); li gp, 729; bne x30, x29, fail;;
  
#sub.S
  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

  test_742: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); sub x30, x1, x2;; li x29, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li gp, 742; bne x30, x29, fail;;
  test_743: li x1, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); sub x30, x1, x2;; li x29, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li gp, 743; bne x30, x29, fail;;
  
  test_745: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xffffffffffff8000) & ((1 << (32 - 1) << 1) - 1)); sub x30, x1, x2;; li x29, ((0x0000000000008000) & ((1 << (32 - 1) << 1) - 1)); li gp, 745; bne x30, x29, fail;;
  test_746: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); sub x30, x1, x2;; li x29, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li gp, 746; bne x30, x29, fail;;
  
  test_748: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000007fff) & ((1 << (32 - 1) << 1) - 1)); sub x30, x1, x2;; li x29, ((0xffffffffffff8001) & ((1 << (32 - 1) << 1) - 1)); li gp, 748; bne x30, x29, fail;;
  test_749: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); sub x30, x1, x2;; li x29, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); li gp, 749; bne x30, x29, fail;;
  
  test_751: li x1, ((0xffffffff80000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000007fff) & ((1 << (32 - 1) << 1) - 1)); sub x30, x1, x2;; li x29, ((0xffffffff7fff8001) & ((1 << (32 - 1) << 1) - 1)); li gp, 751; bne x30, x29, fail;;
  test_752: li x1, ((0x000000007fffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xffffffffffff8000) & ((1 << (32 - 1) << 1) - 1)); sub x30, x1, x2;; li x29, ((0x0000000080007fff) & ((1 << (32 - 1) << 1) - 1)); li gp, 752; bne x30, x29, fail;;

  test_753: li x1, ((0x0000000000000000) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); sub x30, x1, x2;; li x29, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); li gp, 753; bne x30, x29, fail;;
  test_754: li x1, ((0xffffffffffffffff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0000000000000001) & ((1 << (32 - 1) << 1) - 1)); sub x30, x1, x2;; li x29, ((0xfffffffffffffffe) & ((1 << (32 - 1) << 1) - 1)); li gp, 754; bne x30, x29, fail;;
  
#xor.S
  #-------------------------------------------------------------
  # Logical tests
  #-------------------------------------------------------------

  test_800: li x1, ((0xff00ff00) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0f0f0f0f) & ((1 << (32 - 1) << 1) - 1)); xor x30, x1, x2;; li x29, ((0xf00ff00f) & ((1 << (32 - 1) << 1) - 1)); li gp, 800; bne x30, x29, fail;;
  test_801: li x1, ((0x0ff00ff0) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xf0f0f0f0) & ((1 << (32 - 1) << 1) - 1)); xor x30, x1, x2;; li x29, ((0xff00ff00) & ((1 << (32 - 1) << 1) - 1)); li gp, 801; bne x30, x29, fail;;
  test_802: li x1, ((0x00ff00ff) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0x0f0f0f0f) & ((1 << (32 - 1) << 1) - 1)); xor x30, x1, x2;; li x29, ((0x0ff00ff0) & ((1 << (32 - 1) << 1) - 1)); li gp, 802; bne x30, x29, fail;;
  test_803: li x1, ((0xf00ff00f) & ((1 << (32 - 1) << 1) - 1)); li x2, ((0xf0f0f0f0) & ((1 << (32 - 1) << 1) - 1)); xor x30, x1, x2;; li x29, ((0x00ff00ff) & ((1 << (32 - 1) << 1) - 1)); li gp, 803; bne x30, x29, fail;;

#xori.S
  #-------------------------------------------------------------
  # Logical tests
  #-------------------------------------------------------------

  test_826: li x1, ((0x0000000000ff0f00) & ((1 << (32 - 1) << 1) - 1)); xori x30, x1, ((0xf0f) | (-(((0xf0f) >> 11) & 1) << 11));; li x29, ((0xffffffffff00f00f) & ((1 << (32 - 1) << 1) - 1)); li gp, 826; bne x30, x29, fail;;
  test_827: li x1, ((0x000000000ff00ff0) & ((1 << (32 - 1) << 1) - 1)); xori x30, x1, ((0x0f0) | (-(((0x0f0) >> 11) & 1) << 11));; li x29, ((0x000000000ff00f00) & ((1 << (32 - 1) << 1) - 1)); li gp, 827; bne x30, x29, fail;;
  test_828: li x1, ((0x0000000000ff08ff) & ((1 << (32 - 1) << 1) - 1)); xori x30, x1, ((0x70f) | (-(((0x70f) >> 11) & 1) << 11));; li x29, ((0x0000000000ff0ff0) & ((1 << (32 - 1) << 1) - 1)); li gp, 828; bne x30, x29, fail;;
  test_829: li x1, ((0xfffffffff00ff00f) & ((1 << (32 - 1) << 1) - 1)); xori x30, x1, ((0x0f0) | (-(((0x0f0) >> 11) & 1) << 11));; li x29, ((0xfffffffff00ff0ff) & ((1 << (32 - 1) << 1) - 1)); li gp, 829; bne x30, x29, fail;;

  bne x0, gp, pass; fail: finish2: jal x20,finish2; pass: li gp,1;finish1: jal x20,finish1